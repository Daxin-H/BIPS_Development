{"ast":null,"code":"var d = new Date();\nvar hour = d.getHours();\nvar mint = d.getMinutes();\nvar sec = d.getSeconds();\nconst myHeader = document.querySelector(\"h1\");\n// const myContent = document.querySelector(\"h2\");\n// myContent.textContent = \"Current tims is -> \" + hour + \":\" + mint + \":\" + sec;\n\nconst gitHubForm = document.getElementById('gitHubForm');\nconst NameContainer = document.querySelector(\".username\");\n\n// const Fetch_Issue = async (issue) => {\n//   const Issue_api = await fetch(`https://api.github.com/repos/google/guava/issues`);\n//   const issue_data = await Issue_api.json();\n\n//   console.log(issue_data);\n//   return issue_data;\n// }\n\nconst countings = {\n  'p3': 0,\n  'type': 0,\n  'package': 0,\n  'java': 0\n};\nconst Fetch_Issue = out_num => {\n  fetch(`https://api.github.com/repos/google/guava/issues`).then(response => response.json()).then(data => {\n    count_temp = formatResults(data, countings);\n    console.log(countings);\n    NameContainer.innerHTML = `<p><strong> P3:${countings['p3']} </p> \n      <p><strong> type:${countings['type']}</p> \n      <p><strong> java:${countings['java']}</p> \n      <p><strong> package:${countings['package']}</p> \n      `;\n    out_num = countings;\n  }).catch(error => console.error(error));\n};\n_c = Fetch_Issue;\nconst formatResults = (data, countings) => {\n  // Loop over each object in data array\n  for (let i in data) {\n    for (let j in data[i].labels) {\n      const issue = data[i].labels[j];\n      if (issue.name.includes(\"package\")) {\n        countings['package'] += 1;\n      }\n      if (issue.name.includes(\"type\")) {\n        countings['type'] += 1;\n      }\n      if (issue.name === 'java') {\n        countings['java'] += 1;\n      }\n      if (issue.name === 'P3') {\n        countings['p3'] += 1;\n      }\n    }\n  }\n};\nconst out_num = {};\nFetch_Issue(out_num);\nvar _c;\n$RefreshReg$(_c, \"Fetch_Issue\");","map":{"version":3,"names":["d","Date","hour","getHours","mint","getMinutes","sec","getSeconds","myHeader","document","querySelector","gitHubForm","getElementById","NameContainer","countings","Fetch_Issue","out_num","fetch","then","response","json","data","count_temp","formatResults","console","log","innerHTML","catch","error","_c","i","j","labels","issue","name","includes","$RefreshReg$"],"sources":["/Users/huangdaxin/Downloads/BIPS_Development/test-sites/src/index.js"],"sourcesContent":["var d = new Date();\nvar hour = d.getHours();\nvar mint = d.getMinutes();\nvar sec = d.getSeconds();\n\nconst myHeader = document.querySelector(\"h1\");\n// const myContent = document.querySelector(\"h2\");\n// myContent.textContent = \"Current tims is -> \" + hour + \":\" + mint + \":\" + sec;\n\n\nconst gitHubForm = document.getElementById('gitHubForm');\nconst NameContainer = document.querySelector(\".username\");\n\n// const Fetch_Issue = async (issue) => {\n//   const Issue_api = await fetch(`https://api.github.com/repos/google/guava/issues`);\n//   const issue_data = await Issue_api.json();\n\n//   console.log(issue_data);\n//   return issue_data;\n// }\n\n\nconst countings = {\n  'p3': 0,\n  'type': 0,\n  'package': 0,\n  'java': 0,\n\n}\n\nconst Fetch_Issue = (out_num) => {\n  fetch(`https://api.github.com/repos/google/guava/issues`)\n    .then(response => response.json())\n    .then(data => {\n      count_temp = formatResults(data, countings);\n      console.log(countings);\n      NameContainer.innerHTML = `<p><strong> P3:${countings['p3']} </p> \n      <p><strong> type:${countings['type']}</p> \n      <p><strong> java:${countings['java']}</p> \n      <p><strong> package:${countings['package']}</p> \n      `;\n      out_num = countings;\n    })\n    .catch(error => console.error(error))\n\n};\n\nconst formatResults = (data, countings) => {\n  // Loop over each object in data array\n  for (let i in data) {\n    for (let j in data[i].labels) {\n      const issue = data[i].labels[j]\n\n      if (issue.name.includes(\"package\")) {\n        countings['package'] += 1;\n      }\n      if (issue.name.includes(\"type\")) {\n        countings['type'] += 1;\n      }\n      if (issue.name === 'java') {\n        countings['java'] += 1;\n      }\n      if (issue.name === 'P3') {\n        countings['p3'] += 1;\n      }\n    }\n  }\n\n};\n\nconst out_num = {};\nFetch_Issue(out_num);\n"],"mappings":"AAAA,IAAIA,CAAC,GAAG,IAAIC,IAAI,EAAE;AAClB,IAAIC,IAAI,GAAGF,CAAC,CAACG,QAAQ,EAAE;AACvB,IAAIC,IAAI,GAAGJ,CAAC,CAACK,UAAU,EAAE;AACzB,IAAIC,GAAG,GAAGN,CAAC,CAACO,UAAU,EAAE;AAExB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;AAC7C;AACA;;AAGA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,cAAc,CAAC,YAAY,CAAC;AACxD,MAAMC,aAAa,GAAGJ,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;;AAGA,MAAMI,SAAS,GAAG;EAChB,IAAI,EAAE,CAAC;EACP,MAAM,EAAE,CAAC;EACT,SAAS,EAAE,CAAC;EACZ,MAAM,EAAE;AAEV,CAAC;AAED,MAAMC,WAAW,GAAIC,OAAO,IAAK;EAC/BC,KAAK,CAAE,kDAAiD,CAAC,CACtDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZC,UAAU,GAAGC,aAAa,CAACF,IAAI,EAAEP,SAAS,CAAC;IAC3CU,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;IACtBD,aAAa,CAACa,SAAS,GAAI,kBAAiBZ,SAAS,CAAC,IAAI,CAAE;AAClE,yBAAyBA,SAAS,CAAC,MAAM,CAAE;AAC3C,yBAAyBA,SAAS,CAAC,MAAM,CAAE;AAC3C,4BAA4BA,SAAS,CAAC,SAAS,CAAE;AACjD,OAAO;IACDE,OAAO,GAAGF,SAAS;EACrB,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;AAEzC,CAAC;AAACC,EAAA,GAfId,WAAW;AAiBjB,MAAMQ,aAAa,GAAGA,CAACF,IAAI,EAAEP,SAAS,KAAK;EACzC;EACA,KAAK,IAAIgB,CAAC,IAAIT,IAAI,EAAE;IAClB,KAAK,IAAIU,CAAC,IAAIV,IAAI,CAACS,CAAC,CAAC,CAACE,MAAM,EAAE;MAC5B,MAAMC,KAAK,GAAGZ,IAAI,CAACS,CAAC,CAAC,CAACE,MAAM,CAACD,CAAC,CAAC;MAE/B,IAAIE,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;QAClCrB,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;MAC3B;MACA,IAAImB,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/BrB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;MACxB;MACA,IAAImB,KAAK,CAACC,IAAI,KAAK,MAAM,EAAE;QACzBpB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;MACxB;MACA,IAAImB,KAAK,CAACC,IAAI,KAAK,IAAI,EAAE;QACvBpB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;MACtB;IACF;EACF;AAEF,CAAC;AAED,MAAME,OAAO,GAAG,CAAC,CAAC;AAClBD,WAAW,CAACC,OAAO,CAAC;AAAC,IAAAa,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}